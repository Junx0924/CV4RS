ssh jun0924@sshgate.tu-berlin.de
ssh gateway.hpc.tu-berlin.de 
module load python/3.7.1
python -m venv /home/users/j/jun0924/venv
source venv/bin/activate
cd venv

# check python version
python -m pip --version
pip install --upgrade pip  
pip install torch==1.4.0 torchvision==0.5.0 -f  

# install GDAL, need to install proj first (choose the version compiltable for 
# sqlite 3.7)
wget https://download.osgeo.org/proj/proj-6.1.1.tar.gz
tar -zxvf proj-6.1.1.tar.gz
cd proj-6.1.1
./configure --prefix=/home/users/j/jun0924/
make
make install

#install GDAL
wget https://github.com/OSGeo/gdal/releases/download/v3.2.0/gdal-3.2.0.tar.gz
tar -zxvf gdal-3.2.0.tar.gz
cd gdal-3.2.0
./configure --prefix=/home/users/j/jun0924/ --with-proj=/home/users/j/jun0924/ --with-python
make
make install
export LD_LIBRARY_PATH=/home/users/j/jun0924/lib
pip install GDAL==3.2.0  

#open python terminal to check the module you need
python
# eg:
>>import numpy
>>from osgeo import GDAL

# Problem may encountered
OpenBLAS blas_thread_init: pthread_create failed for thread 27 of 36: Resource temporarily unavailable
OpenBLAS blas_thread_init: RLIMIT_NPROC 514120 current, 514120 max

# solution
export OMP_NUM_THREADS=1
export USE_SIMPLE_THREADED_LEVEL3=1

# check the cuda version your pytorch support
>>> import torch
>>> torch.version.cuda
'10.1'
otherwise, it will have errors like: can't open shared object  libcudart.so.10.1 (if your cuda is 10.0)
# force pip to install torch only for cuda 10.0
pip install torch==1.4.0+cu100 -f https://download.pytorch.org/whl/torch_stable.html

# copy training results from HPC to local
user laptop>scp -r -o 'ProxyJump jun0924@sshgate.tu-berlin.de' jun0924@gateway.hpc.tu-berlin.de:~/Training_Results/MLRSNet/*  ./

user laptop>scp -r -o 'ProxyJump jun0924@sshgate.tu-berlin.de' jun0924@gateway.hpc.tu-berlin.de:/scratch/CV4RS/Dataset/MLRSNet.tar  ./

# copy local files to HPC
user laptop>scp -r -o 'ProxyJump jun0924@sshgate.tu-berlin.de' <local_file> jun0924@gateway.hpc.tu-berlin.de:~
